{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../client.service\";\nexport class ProductService {\n  constructor(clientService) {\n    this.clientService = clientService;\n  }\n  getAll() {\n    return this.clientService.get('products');\n  }\n  getById(productId) {\n    return this.clientService.get('products', productId);\n  }\n  search(params) {\n    return this.clientService.get('products', undefined, {\n      params\n    });\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.ClientService));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,cAAc;EACvBC,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;EAAmB;EAEpDC,MAAM;IACF,OAAO,IAAI,CAACD,aAAa,CAACE,GAAG,CAAC,UAAU,CAAC;EAC7C;EAEAC,OAAO,CAACC,SAAiB;IACrB,OAAO,IAAI,CAACJ,aAAa,CAACE,GAAG,CAAC,UAAU,EAAEE,SAAS,CAAC;EACxD;EAEAC,MAAM,CAACC,MAAkB;IACrB,OAAO,IAAI,CAACN,aAAa,CAACE,GAAG,CAAC,UAAU,EAAEK,SAAS,EAAE;MAAED;IAAM,CAAE,CAAC;EACpE;;AAbSR,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAU,SAAdV,cAAc;EAAAW,YAFb;AAAM","names":["ProductService","constructor","clientService","getAll","get","getById","productId","search","params","undefined","factory","providedIn"],"sourceRoot":"","sources":["/Users/abelmejia/projects/angular-app-shell/src/app/shared/services/products/products.service.ts"],"sourcesContent":["import { HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {  Observable } from 'rxjs';\nimport { ClientService } from '../client.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n    constructor(private clientService: ClientService) { }\n\n    getAll(): Observable<any> {\n        return this.clientService.get('products');\n    }\n\n    getById(productId: number): Observable<any> {\n        return this.clientService.get('products', productId);\n    }\n\n    search(params: HttpParams): Observable<any> {\n        return this.clientService.get('products', undefined, { params });\n    }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}